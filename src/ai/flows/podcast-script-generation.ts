// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Podcast script generation flow.
 *
 * - generatePodcastScript - A function that generates a podcast script based on a keyword.
 * - GeneratePodcastScriptInput - The input type for the generatePodcastScript function.
 * - GeneratePodcastScriptOutput - The return type for the generatePodcastScript function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const GeneratePodcastScriptInputSchema = z.object({
  keyword: z.string().describe('The keyword for the podcast script.'),
});
export type GeneratePodcastScriptInput = z.infer<typeof GeneratePodcastScriptInputSchema>;

const GeneratePodcastScriptOutputSchema = z.object({
  script: z.string().describe('The generated podcast script.'),
});
export type GeneratePodcastScriptOutput = z.infer<typeof GeneratePodcastScriptOutputSchema>;

export async function generatePodcastScript(input: GeneratePodcastScriptInput): Promise<GeneratePodcastScriptOutput> {
  return generatePodcastScriptFlow(input);
}

const prompt = ai.definePrompt({
  name: 'podcastScriptPrompt',
  input: {
    schema: z.object({
      keyword: z.string().describe('The keyword for the podcast script.'),
    }),
  },
  output: {
    schema: z.object({
      script: z.string().describe('The generated podcast script.'),
    }),
  },
  prompt: `You are a podcast script writer. Generate a full podcast script based on the following keyword, including introduction, main content, and conclusion.\n\nKeyword: {{{keyword}}}`,
});

const generatePodcastScriptFlow = ai.defineFlow<
  typeof GeneratePodcastScriptInputSchema,
  typeof GeneratePodcastScriptOutputSchema
>(
  {
    name: 'generatePodcastScriptFlow',
    inputSchema: GeneratePodcastScriptInputSchema,
    outputSchema: GeneratePodcastScriptOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
